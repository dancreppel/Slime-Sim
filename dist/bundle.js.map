{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/creature.js","webpack:///./src/entity.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/map.js","webpack:///./src/slime.js","webpack:///./src/util.js"],"names":["Creature","options","Entity","pos","dim","image","Image","src","hitboxCenter","hitboxRadius","ctx","drawImage","dx","dy","map","_","i","entity","distance","Math","sqrt","minDistance","Game","DIM_X","DIM_Y","entities","creatures","moveDirX","moveDirY","player","Slime","sandBox","Map","height","wall","floor","outside","concat","inanimateEntities","mouse","numType","type","xRange","rightBound","leftBound","yRange","bottomBound","topBound","xOffset","yOffset","randPos","Util","newCreature","invalidPos","some","isCollision","push","clearRect","draw","forEach","creature","setKeyBinds","createPlayer","generateMap","generateEntities","generateEnemies","setInterval","render","move","checkCollision","outOfBounds","eat","dead","console","log","document","addEventListener","e","preventDefault","speed","key","horKeys","verKeys","includes","reverse","canvas","getElementById","getContext","width","game","start","wallEntities","floorTiles","background","createBorder","boundary","createFloor","createOutside","createInanimateEntities","n","spacing","tile","j","offset","treeDim","numTrees","newTree","enemies","enemy","eatable","grow","enemyVolume","pow","PI","playerVolume","newVolume","newRadius","randXPos","random","randYPos"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Entity from './entity';\n\nexport default class Creature extends Entity {\n  constructor (options) {\n    super(options);\n    // this.pos\n    // this.dim\n    // this.image\n    // this.hitboxCenter\n    // this.hitboxRadius\n  }\n}","export default class Entity {\n  constructor(options) {\n    // pos is an array with x and y coordinates [x, y]\n    this.pos = options.pos;\n    // dim is an array with width and height [width, height]\n    this.dim = options.dim;\n    this.image = new Image();\n    this.image.src = options.src;\n\n    // Instantiate hitbox\n    this.hitboxCenter = this.hitboxCenter();\n    this.hitboxRadius = this.hitboxRadius();\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.pos[0],\n      this.pos[1],\n      this.dim[0],\n      this.dim[1]\n    );\n\n    // ! for testing\n    // this.drawHitbox();\n  }\n\n  move(dx, dy, ...entities) {\n    this.pos[0] += dx;\n    this.pos[1] += dy;\n    this.hitboxCenter[0] += dx;\n    this.hitboxCenter[1] += dy;\n  }\n\n  hitboxCenter() {\n    let hitboxCenter = this.pos.map((_, i) => this.pos[i] + this.dim[i] / 2);\n    return hitboxCenter;\n  }\n\n  hitboxRadius() {\n    return this.dim[0] < this.dim[1] ? this.dim[0] / 2 : this.dim[1] / 2;\n  }\n\n  // ! for testing\n  // drawHitbox() {\n  //   const canvas = document.getElementById(\"canvas\");\n  //   const ctx = canvas.getContext(\"2d\");\n  //   ctx.beginPath();\n  //   ctx.arc(\n  //     this.hitboxCenter[0],\n  //     this.hitboxCenter[1],\n  //     this.hitboxRadius,\n  //     0,\n  //     2 * Math.PI,\n  //     false\n  //   );\n  //   ctx.stroke();\n\n  //   return true;\n  // }\n\n  isCollision(entity) {\n    let dx = this.hitboxCenter[0] - entity.hitboxCenter[0];\n    let dy = this.hitboxCenter[1] - entity.hitboxCenter[1];\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let minDistance = this.hitboxRadius + entity.hitboxRadius;\n\n    if (distance < minDistance) return true;\n    else return false;\n  }\n}","import Entity from './entity';\nimport Creature from './creature'\nimport Slime from './slime';\nimport Map from './map';\nimport * as Util from \"./util\";\n\nexport default class Game {\n  constructor (options) {\n    this.DIM_X = options.DIM_X;\n    this.DIM_Y = options.DIM_Y;\n    this.ctx = options.ctx;\n    this.entities = [];\n    this.creatures = [];\n    this.moveDirX = 0;\n    this.moveDirY = 0;\n\n  }\n\n  createPlayer () {\n    // center pos in the middle of the canvas object\n    let pos = [this.DIM_X / 2, this.DIM_Y / 2];\n    this.player = new Slime({\n      pos,\n      dim: [30, 30],\n      src: \"assets/sprites/slime.png\"\n    });\n\n    // this.entities.push(this.player);\n    // this.creatures.push(this.player);\n  }\n\n  generateMap () {\n    this.sandBox = new Map({\n      player: this.player,\n      height: 6000,\n      wall: \"assets/sprites/rock.png\",\n      floor: \"assets/sprites/grass.png\",\n      outside: \"assets/sprites/dirt.jpg\",\n    });\n  }\n\n  generateEntities () {\n    // add inanimate objects like trees to entities array\n    this.entities = this.entities.concat(this.sandBox.inanimateEntities);\n  }\n\n  generateEnemies () {\n    let creatures = {\n      mouse: {dim: 20, src: 'assets/sprites/mouse.png'}\n    }\n\n    const entities = this.entities.concat(this.player);\n\n    let numType = 20;\n    for(const type in creatures) {\n      let dim = creatures[type].dim;\n      let src = creatures[type].src;\n      const xRange = this.sandBox.rightBound - this.sandBox.leftBound - dim;\n      const yRange = this.sandBox.bottomBound - this.sandBox.topBound - dim;\n      let i = 1;\n      while(i < numType) {\n        const xOffset = this.sandBox.leftBound;\n        const yOffset = this.sandBox.topBound;\n        const randPos = Util.randPos(xRange, yRange, xOffset, yOffset);\n        const newCreature = new Creature ({\n          pos: randPos,\n          dim: [dim, dim],\n          src: src\n        });\n        const invalidPos = entities.some(entity => \n          newCreature.isCollision(entity)\n        );\n        // only push new creature to creatures array if it is in a valid pos\n        if (!invalidPos) {\n          this.creatures.push(newCreature);\n          i++;\n        }\n      }\n    }\n  }\n\n  render (ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.sandBox.draw(ctx);\n    this.entities.forEach(entity => entity.draw(ctx));\n    this.creatures.forEach(creature => creature.draw(ctx));\n    this.player.draw(ctx);\n  }\n\n  start () {\n    this.setKeyBinds();\n    this.createPlayer();\n    this.generateMap();\n    this.generateEntities();\n    this.generateEnemies();\n    // refresh 60 times per second\n    setInterval(() => {\n      this.render(this.ctx);\n      // regular move\n      this.move(false);\n      // if a collision occurs, reverse move\n      if (this.checkCollision() || this.sandBox.outOfBounds(this.player)) {\n        this.move(true);\n      }\n      this.player.eat(this.creatures);\n      if (this.player.dead) console.log('game over');\n    }, 17)\n  }\n\n  setKeyBinds () {\n    // handle keydownfor arrow keys\n    document.addEventListener('keydown', e => {\n      e.preventDefault();\n      let speed = 10 ;\n      switch (e.key) {\n        case 'ArrowUp':\n          this.moveDirY = speed;\n          break;\n        case 'ArrowDown':\n          this.moveDirY = -speed;\n          break;\n        case 'ArrowLeft':\n          this.moveDirX = speed;\n          break;\n        case 'ArrowRight':\n          this.moveDirX = -speed;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // handle keyup for arrow keys\n    document.addEventListener('keyup', e => {\n      e.preventDefault();\n      const horKeys = ['ArrowLeft', 'ArrowRight'];\n      const verKeys = ['ArrowUp', 'ArrowDown']; \n\n      if (horKeys.includes(e.key)) {\n        this.moveDirX = 0;\n      }\n\n      if (verKeys.includes(e.key)) {\n        this.moveDirY = 0;\n      }\n    })\n  }\n\n  move (reverse) {\n    // * testing\n    if (reverse) {\n      this.entities.forEach((entity) =>\n        entity.move(-this.moveDirX, -this.moveDirY)\n      );\n\n      this.creatures.forEach((entity) =>\n        entity.move(-this.moveDirX, -this.moveDirY)\n      );\n\n      this.sandBox.move(-this.moveDirX, -this.moveDirY);\n    } else {\n      this.entities.forEach((entity) =>\n        entity.move(this.moveDirX, this.moveDirY)\n      );\n\n      this.creatures.forEach((entity) =>\n        entity.move(this.moveDirX, this.moveDirY)\n      );\n\n      this.sandBox.move(this.moveDirX, this.moveDirY);\n    }\n    // this.player.move();\n    // this.creatures.forEach(creature => creature.move(this.moveDirX, this.moveDirY));\n  }\n\n  checkCollision () {\n    return this.entities.some(entity => entity.isCollision(this.player));\n  }\n}","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('canvas');\n  const DIM_X = 1600;\n  const DIM_Y = 900;\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = DIM_X;\n  canvas.height = DIM_Y;\n  \n  let game = new Game({\n    DIM_X,\n    DIM_Y,\n    ctx\n  });\n  \n  game.start();\n});","import Entity from './entity';\nimport * as Util from './util';\n\nexport default class Map {\n  constructor (options) {\n    this.player = options.player;\n    this.height = options.height;\n    // pass in src for wall object and floor\n    this.wall = options.wall;\n    this.floor = options.floor;\n    this.outside = options.outside;\n\n    this.wallEntities = [];\n    this.floorTiles = [];\n    this.background = [];\n    this.inanimateEntities = [];\n\n    // instantiate the following\n    this.createBorder();\n    this.boundary();\n    this.createFloor();\n    this.createOutside();\n    this.createInanimateEntities();\n  }\n\n  createBorder () {\n    let n = 20;\n    this.spacing = this.height / n;\n    let spacing = this.spacing;\n\n    for(let i = 0; i < n; i++) {\n      // left border\n      this.wallEntities.push(\n        new Entity ({\n          pos: [0, i * spacing],\n          dim: [spacing, spacing],\n          src: this.wall\n        })\n      ) ;\n\n      // right border\n      this.wallEntities.push(\n        new Entity ({\n          pos: [this.height, i * spacing + spacing],\n          dim: [spacing, spacing],\n          src: this.wall\n        })\n      );\n\n      // top border\n      this.wallEntities.push(\n        new Entity({\n          pos: [i * spacing + spacing, 0],\n          dim: [spacing, spacing],\n          src: this.wall,\n        })\n      );\n\n      // bottom border\n      this.wallEntities.push(\n        new Entity({\n          pos: [i * spacing, this.height],\n          dim: [spacing, spacing],\n          src: this.wall,\n        })\n      );\n    }\n  }\n\n  draw (ctx) {\n    this.background.forEach(tile => tile.draw(ctx));\n    this.floorTiles.forEach(tile => tile.draw(ctx));\n    this.wallEntities.forEach(entity => entity.draw(ctx));\n  }\n\n  boundary () {\n    // Bounds are determined by their X or Y values\n    // ex: X = 0 or Y = 10\n    // top bound in terms of Y\n    this.topBound = this.spacing;\n    // right bound in terms of X\n    this.rightBound = this.height;\n    // bottom bound in terms of Y\n    this.bottomBound = this.height;\n    // left bound in terms of X\n    this.leftBound = this.spacing;\n  }\n\n  move (dx, dy) {\n    // adjust bounds\n    this.topBound += dy;\n    this.rightBound += dx;\n    this.bottomBound += dy;\n    this.leftBound += dx;\n    \n    // adjust pos for each tile\n    this.floorTiles.forEach(tile => tile.move(dx, dy));\n    // adjust pos for each wall object\n    this.wallEntities.forEach(entity => entity.move(dx, dy));\n    this.background.forEach(tile => tile.move(dx, dy));\n  }\n\n  outOfBounds (entity) {\n    // check if entity's hitbox is above top bound\n    if (entity.hitboxCenter[1] - entity.hitboxRadius < this.topBound) return true;\n    // check if entity's hitbox is below bottom bound\n    if (entity.hitboxCenter[1] + entity.hitboxRadius > this.bottomBound) return true;\n    // check if entity's hitbox is out of left bound\n    if (entity.hitboxCenter[0] - entity.hitboxRadius < this.leftBound) return true;\n    // check if entity's hitbox is out of right bound\n    if (entity.hitboxCenter[0] + entity.hitboxRadius > this.rightBound) return true;\n    // otherwise\n    return false;\n  }\n\n  createFloor () {\n    // n x n grass tiles\n    let n = 20;\n    let dim = this.height / n;\n    let xOffset = this.spacing / 2;\n    let yOffset = this.spacing * .8;\n    for(let i = 0; i < n; i++) {\n      for(let j = 0; j < n; j++) {\n        this.floorTiles.push(\n          new Entity({\n            pos: [i * dim + xOffset, j * dim + yOffset],\n            dim: [dim, dim],\n            src: this.floor,\n          })\n        );\n      }\n    }\n  }\n\n  createOutside () {\n    let n = 50;\n    let offset = 900;\n    let dim = (this.height + 2 * offset) / n;\n\n    for(let i = 0; i < n; i++) {\n      for(let j = 0; j < n; j++) {\n        // manually found best size, this prevents drawing too many assets\n        // optimized for 5000+ height\n        if (i < 8 || j < 8 || i > 42 || j > 42)\n        this.background.push(\n          new Entity({\n            pos: [i * dim - offset, j * dim - offset],\n            dim: [dim, dim],\n            src: this.outside,\n          })\n        );\n      }\n    }\n  }\n\n  createInanimateEntities () {\n    // randomly place n trees\n    let treeDim = 300;\n    let numTrees = 30;\n    let xRange = this.rightBound - this.leftBound - treeDim;\n    let yRange = this.bottomBound - this.topBound - treeDim;\n\n    for(let i = 0; i < numTrees; i++) {\n      let randPos = Util.randPos(xRange, yRange, this.leftBound, this.topBound);\n      const entities = this.inanimateEntities.concat(this.player);\n      let newTree = new Entity({\n        pos: [randPos[0], randPos[1]],\n        dim: [treeDim, treeDim],\n        src: 'assets/sprites/tree.png'\n      });\n\n      // if the tree overlaps the player or other tree redo iteration\n      let invalidPos = entities.some(entity => newTree.isCollision(entity));\n      if (invalidPos) i--;\n      else this.inanimateEntities.push(newTree);\n      \n    }\n  }\n}","import Creature from './creature';\n\nexport default class Slime extends Creature {\n  constructor (options) {\n    super(options);\n  }\n  \n  move () {\n    // Do not move because the player should be in the center of the frame of\n    // reference\n  }\n\n  eat (enemies) {\n    enemies.forEach((enemy, i) => {\n      if (this.eatable(enemy)) {\n        this.grow(enemy);\n        // remove enemy\n        delete enemies[i];\n      }\n    });\n  }\n\n  eatable (enemy) {\n    let dx = this.hitboxCenter[0] - enemy.hitboxCenter[0];\n    let dy = this.hitboxCenter[1] - enemy.hitboxCenter[1];\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let minDistance = this.hitboxRadius;\n\n    if (distance < minDistance && this.hitboxRadius < enemy.hitboxRadius) {\n      this.dead = true;\n    }\n\n    if (distance < minDistance && this.hitboxRadius > enemy.hitboxRadius) {\n      return true;\n    } else return false;\n  }\n\n  grow (enemy) {\n    let enemyVolume = Math.pow(enemy.hitboxRadius, 3) * Math.PI * 4 / 3;\n    let playerVolume = Math.pow(this.hitboxRadius, 3) * Math.PI * 4 / 3;\n    let newVolume = enemyVolume + playerVolume;\n    let newRadius = Math.pow(newVolume / Math.PI * 3 / 4, 1 / 3);\n    // apply new radius\n    this.hitboxRadius = newRadius;\n    // apply new dimensions using diameter\n    this.dim = [newRadius * 2, newRadius * 2];\n    // adjust hitbox center\n    this.hitboxCenter = this.pos.map((_, i) => this.pos[i] + this.dim[i] / 2);\n  }\n}","export const randPos = (xRange, yRange, xOffset, yOffset) => {\n  let randPos = [];\n  let randXPos = Math.random() * xRange + xOffset;\n  randPos.push(randXPos);\n  let randYPos = Math.random() * yRange + yOffset;\n  randPos.push(randYPos);\n  return randPos;\n}"],"sourceRoot":""}