{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/creature.js","webpack:///./src/entity.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/map.js","webpack:///./src/slime.js"],"names":["Creature","options","Entity","pos","dim","image","Image","src","hitboxCenter","hitboxRadius","ctx","drawImage","dx","dy","map","_","i","entity","distance","Math","sqrt","minDistance","Game","DIM_X","DIM_Y","entities","creatures","moveDirX","moveDirY","player","Slime","push","sandBox","Map","height","wall","floor","outside","clearRect","draw","forEach","creature","setKeyBinds","generateMap","generateEntities","createPlayer","setInterval","render","move","checkCollision","outOfBounds","document","addEventListener","e","preventDefault","key","horKeys","verKeys","includes","reverse","some","isCollision","canvas","getElementById","getContext","width","game","start","wallEntities","floorTiles","background","createBorder","boundary","createFloor","createOutside","n","spacing","tile","topBound","rightBound","bottomBound","leftBound","j","offset"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Entity from './entity';\n\nexport default class Creature extends Entity {\n  constructor (options) {\n    super(options);\n    // this.pos\n    // this.dim\n    // this.image\n    // this.hitboxCenter\n    // this.hitboxRadius\n  }\n\n  move() {\n    // Do not move because the player should be in the center of the frame of\n    // reference\n  }\n}","export default class Entity {\n  constructor(options) {\n    // pos is an array with x and y coordinates [x, y]\n    this.pos = options.pos;\n    // dim is an array with width and height [width, height]\n    this.dim = options.dim;\n    this.image = new Image();\n    this.image.src = options.src;\n\n    // Instantiate hitbox\n    this.hitboxCenter = this.hitboxCenter();\n    this.hitboxRadius = this.hitboxRadius();\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.pos[0],\n      this.pos[1],\n      this.dim[0],\n      this.dim[1]\n    );\n\n    // ! for testing\n    // this.drawHitbox();\n  }\n\n  move(dx, dy, ...entities) {\n    this.pos[0] += dx;\n    this.pos[1] += dy;\n    this.hitboxCenter[0] += dx;\n    this.hitboxCenter[1] += dy;\n  }\n\n  hitboxCenter() {\n    let hitboxCenter = this.pos.map((_, i) => this.pos[i] + this.dim[i] / 2);\n    return hitboxCenter;\n  }\n\n  hitboxRadius() {\n    return this.dim[0] < this.dim[1] ? this.dim[0] / 2 : this.dim[1] / 2;\n  }\n\n  // ! for testing\n  // drawHitbox() {\n  //   const canvas = document.getElementById(\"canvas\");\n  //   const ctx = canvas.getContext(\"2d\");\n  //   ctx.beginPath();\n  //   ctx.arc(\n  //     this.hitboxCenter[0],\n  //     this.hitboxCenter[1],\n  //     this.hitboxRadius,\n  //     0,\n  //     2 * Math.PI,\n  //     false\n  //   );\n  //   ctx.stroke();\n\n  //   return true;\n  // }\n\n  isCollision(entity) {\n    let dx = this.hitboxCenter[0] - entity.hitboxCenter[0];\n    let dy = this.hitboxCenter[1] - entity.hitboxCenter[1];\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let minDistance = this.hitboxRadius + entity.hitboxRadius;\n\n    if (distance < minDistance) return true;\n    else return false;\n  }\n}","import Entity from './entity';\nimport Slime from './slime';\nimport Map from './map';\n\nexport default class Game {\n  constructor (options) {\n    this.DIM_X = options.DIM_X;\n    this.DIM_Y = options.DIM_Y;\n    this.ctx = options.ctx;\n    this.entities = [];\n    this.creatures = [];\n    this.moveDirX = 0;\n    this.moveDirY = 0;\n\n  }\n\n  createPlayer () {\n    // center pos in the middle of the canvas object\n    let pos = [this.DIM_X / 2, this.DIM_Y / 2];\n    this.player = new Slime({\n      pos,\n      dim: [30, 30],\n      src: \"assets/sprites/slime.png\"\n    });\n\n    // this.entities.push(this.player);\n    this.creatures.push(this.player);\n  }\n\n  generateMap () {\n    this.sandBox = new Map({\n      height: 5000,\n      wall: \"assets/sprites/rock.png\",\n      floor: \"assets/sprites/grass.png\",\n      outside: \"assets/sprites/dirt.jpg\",\n    });\n  }\n\n  generateEntities () {\n    // * For testing\n    // this.rock = new Entity ({\n    //   pos: [500, 500],\n    //   dim: [200, 150],\n    //   src: 'assets/sprites/rock.jpg'\n    // });\n    // this.entities.push(this.rock);\n\n    // this.entities = this.sandBox.wallEntities;\n\n  }\n\n  render (ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.sandBox.draw(ctx);\n    this.entities.forEach(entity => entity.draw(ctx));\n    this.creatures.forEach(creature => creature.draw(ctx));\n  }\n\n  start () {\n    this.setKeyBinds();\n    this.generateMap();\n    this.generateEntities();\n    this.createPlayer();\n    // refresh 60 times per second\n    setInterval(() => {\n      this.render(this.ctx);\n      // regular move\n      this.move(false);\n      // if a collision occurs, reverse move\n      if (this.checkCollision() || this.sandBox.outOfBounds(this.player)) {\n        this.move(true);\n      }\n    }, 16.667)\n  }\n\n  setKeyBinds () {\n    // handle keydownfor arrow keys\n    document.addEventListener('keydown', e => {\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          this.moveDirY = 10;\n          break;\n        case 'ArrowDown':\n          this.moveDirY = -10;\n          break;\n        case 'ArrowLeft':\n          this.moveDirX = 10;\n          break;\n        case 'ArrowRight':\n          this.moveDirX = -10;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // handle keyup for arrow keys\n    document.addEventListener('keyup', e => {\n      e.preventDefault();\n      const horKeys = ['ArrowLeft', 'ArrowRight'];\n      const verKeys = ['ArrowUp', 'ArrowDown']; \n\n      if (horKeys.includes(e.key)) {\n        this.moveDirX = 0;\n      }\n\n      if (verKeys.includes(e.key)) {\n        this.moveDirY = 0;\n      }\n    })\n  }\n\n  move (reverse) {\n    // * testing\n    if (reverse) {\n      this.entities.forEach((entity) =>\n        entity.move(-this.moveDirX, -this.moveDirY)\n      );\n\n      this.sandBox.move(-this.moveDirX, -this.moveDirY);\n    } else {\n      this.entities.forEach((entity) =>\n        entity.move(this.moveDirX, this.moveDirY)\n      );\n\n      this.sandBox.move(this.moveDirX, this.moveDirY);\n    }\n    // this.player.move();\n    // this.creatures.forEach(creature => creature.move(this.moveDirX, this.moveDirY));\n  }\n\n  checkCollision () {\n    return this.entities.some(entity => entity.isCollision(this.player));\n  }\n}","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('canvas');\n  const DIM_X = 1600;\n  const DIM_Y = 900;\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = DIM_X;\n  canvas.height = DIM_Y;\n  \n  let game = new Game({\n    DIM_X,\n    DIM_Y,\n    ctx\n  });\n  \n  game.start();\n});","import Entity from './entity';\n\nexport default class Map {\n  constructor (options) {\n    this.height = options.height;\n\n    // pass in src for wall object and floor\n    this.wall = options.wall;\n    this.floor = options.floor;\n    this.outside = options.outside;\n\n    this.wallEntities = [];\n    this.floorTiles = [];\n    this.background = [];\n\n    // instantiate borders of map\n    this.createBorder();\n    // instantiate bounds of map\n    this.boundary();\n    // instantiate floor of map\n    this.createFloor();\n    this.createOutside();\n  }\n\n  createBorder () {\n    let n = 40;\n    this.spacing = this.height / n;\n    let spacing = this.spacing;\n\n    for(let i = 0; i < n; i++) {\n      // left border\n      this.wallEntities.push(\n        new Entity ({\n          pos: [0, i * spacing],\n          dim: [spacing, spacing],\n          src: this.wall\n        })\n      ) ;\n\n      // right border\n      this.wallEntities.push(\n        new Entity ({\n          pos: [this.height, i * spacing + spacing],\n          dim: [spacing, spacing],\n          src: this.wall\n        })\n      );\n\n      // top border\n      this.wallEntities.push(\n        new Entity({\n          pos: [i * spacing + spacing, 0],\n          dim: [spacing, spacing],\n          src: this.wall,\n        })\n      );\n\n      // bottom border\n      this.wallEntities.push(\n        new Entity({\n          pos: [i * spacing, this.height],\n          dim: [spacing, spacing],\n          src: this.wall,\n        })\n      );\n    }\n  }\n\n  draw (ctx) {\n    this.background.forEach(tile => tile.draw(ctx));\n    this.floorTiles.forEach(tile => tile.draw(ctx));\n    this.wallEntities.forEach(entity => entity.draw(ctx));\n    \n    // // ! Testing only\n    // this.drawBoundary(ctx);\n  }\n\n  boundary () {\n    // Bounds are determined by their X or Y values\n    // ex: X = 0 or Y = 10\n    \n    // top bound in terms of Y\n    this.topBound = this.spacing;\n    \n    // right bound in terms of X\n    this.rightBound = this.height;\n    \n    // bottom bound in terms of Y\n    this.bottomBound = this.height;\n    \n    // left bound in terms of X\n    this.leftBound = this.spacing;\n  }\n\n  move (dx, dy) {\n    // adjust bounds\n    this.topBound += dy;\n    this.rightBound += dx;\n    this.bottomBound += dy;\n    this.leftBound += dx;\n    \n    // adjust pos for each tile\n    this.floorTiles.forEach(tile => tile.move(dx, dy));\n    // adjust pos for each wall object\n    this.wallEntities.forEach(entity => entity.move(dx, dy));\n    this.background.forEach(tile => tile.move(dx, dy));\n  }\n\n  // // ! Testing Only\n  // drawBoundary (ctx) {\n  //   // ! Testing only\n  //   let bounds = [];\n  //   // top left corner\n  //   bounds.push([this.leftBound, this.topBound]);\n  //   // top right corner\n  //   bounds.push([this.rightBound, this.topBound]);\n  //   // bottom right corner\n  //   bounds.push([this.rightBound, this.bottomBound]);\n  //   // bottom left corner\n  //   bounds.push([this.leftBound, this.bottomBound]);\n\n  //   ctx.beginPath();\n  //   let startX = bounds[0][0];\n  //   let startY = bounds[0][1];\n\n  //   bounds.forEach((bound, idx) => {\n  //     if (idx === 0) {\n  //       ctx.moveTo(startX, startY);\n  //     } else {\n  //       let moveToX = bound[0];\n  //       let moveToY = bound[1];\n  //       ctx.lineTo(moveToX, moveToY);\n  //     }\n\n  //     // edge case when last index lineTo start\n  //     if (idx === bounds.length - 1) {\n  //       ctx.lineTo(startX, startY);\n  //     }\n  //   });\n  //   ctx.stroke();\n  // }\n\n  outOfBounds (entity) {\n    // check if entity's hitbox is above top bound\n    if (entity.hitboxCenter[1] - entity.hitboxRadius < this.topBound) return true;\n    // check if entity's hitbox is below bottom bound\n    if (entity.hitboxCenter[1] + entity.hitboxRadius > this.bottomBound) return true;\n    // check if entity's hitbox is out of left bound\n    if (entity.hitboxCenter[0] - entity.hitboxRadius < this.leftBound) return true;\n    // check if entity's hitbox is out of right bound\n    if (entity.hitboxCenter[0] + entity.hitboxRadius > this.rightBound) return true;\n    // otherwise\n    return false;\n  }\n\n  createFloor () {\n    // n x n grass tiles\n    let n = 20;\n    let dim = this.height / n;\n\n    for(let i = 0; i < n; i++) {\n      for(let j = 0; j < n; j++) {\n        this.floorTiles.push(\n          new Entity({\n            pos: [i * dim, j * dim],\n            dim: [dim + this.spacing, dim + this.spacing],\n            src: this.floor,\n          })\n        );\n      }\n    }\n  }\n\n  createOutside () {\n    let n = 50;\n    let offset = 900;\n    let dim = (this.height + 2 * offset) / n;\n\n    for(let i = 0; i < n; i++) {\n      for(let j = 0; j < n; j++) {\n        // manually found best size, this prevents drawing too many assets\n        // optimized for 5000 height\n        if (i < 8 || j < 8 || i > 42 || j > 42)\n        this.background.push(\n          new Entity({\n            pos: [i * dim - offset, j * dim - offset],\n            dim: [dim, dim],\n            src: this.outside,\n          })\n        );\n      }\n    }\n  }\n}","import Creature from './creature';\n\nexport default class Slime extends Creature {\n  constructor (options) {\n    super(options);\n  }\n  \n  move() {\n    // Do not move because the player should be in the center of the frame of\n    // reference\n  }\n}"],"sourceRoot":""}