{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/creature.js","webpack:///./src/entity.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/slime.js"],"names":["Creature","options","Entity","pos","dim","image","Image","src","hitboxCenter","hitboxRadius","ctx","drawImage","dx","dy","isCollision","map","_","i","entity","distance","Math","sqrt","minDistance","Game","DIM_X","DIM_Y","entities","creatures","moveDirX","moveDirY","player","Slime","push","rock","clearRect","forEach","draw","creature","setKeyBinds","generateEntities","createPlayer","setInterval","render","moveEntities","document","addEventListener","e","preventDefault","key","horKeys","verKeys","includes","move","canvas","getElementById","getContext","width","height","game","start"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Entity from './entity';\n\nexport default class Creature extends Entity {\n  constructor (options) {\n    super(options);\n    // this.pos\n    // this.dim\n    // this.image\n    // this.hitboxCenter\n    // this.hitboxRadius\n  }\n\n  move() {\n    // Do not move because the player should be in the center of the frame of\n    // reference\n  }\n}","export default class Entity {\n  constructor(options) {\n    // pos is an array with x and y coordinates [x, y]\n    this.pos = options.pos;\n    // dim is an array with width and height [width, height]\n    this.dim = options.dim;\n    this.image = new Image();\n    this.image.src = options.src;\n\n    // Instantiate hitbox\n    this.hitboxCenter = this.hitboxCenter();\n    this.hitboxRadius = this.hitboxRadius();\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.pos[0],\n      this.pos[1],\n      this.dim[0],\n      this.dim[1]\n    );\n\n    // // ! for testing\n    // this.drawHitbox();\n  }\n\n  move(dx, dy, ...entities) {\n    this.pos[0] += dx;\n    this.pos[1] += dy;\n    this.hitboxCenter[0] += dx;\n    this.hitboxCenter[1] += dy;\n\n    if (this.isCollision(entities[0])) {\n      // undo move with a little bounce back\n      this.pos[0] -= 1.1 * dx;\n      this.pos[1] -= 1.1 * dy;\n      this.hitboxCenter[0] -= 1.1 * dx;\n      this.hitboxCenter[1] -= 1.1 * dy;\n    }\n  }\n\n  hitboxCenter() {\n    let hitboxCenter = this.pos.map((_, i) => this.pos[i] + this.dim[i] / 2);\n    return hitboxCenter;\n  }\n\n  hitboxRadius() {\n    return this.dim[0] < this.dim[1] ? this.dim[0] / 2 : this.dim[1] / 2;\n  }\n\n  // // ! for testing\n  // drawHitbox() {\n  //   const canvas = document.getElementById(\"canvas\");\n  //   const ctx = canvas.getContext(\"2d\");\n  //   ctx.beginPath();\n  //   ctx.arc(\n  //     this.hitboxCenter[0],\n  //     this.hitboxCenter[1],\n  //     this.hitboxRadius,\n  //     0,\n  //     2 * Math.PI,\n  //     false\n  //   );\n  //   ctx.stroke();\n\n  //   return true;\n  // }\n\n  isCollision(entity) {\n    let dx = this.hitboxCenter[0] - entity.hitboxCenter[0];\n    let dy = this.hitboxCenter[1] - entity.hitboxCenter[1];\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    let minDistance = this.hitboxRadius + entity.hitboxRadius;\n\n    if (distance < minDistance) return true;\n    else return false;\n  }\n}","import Entity from './entity';\nimport Slime from './slime';\n\nexport default class Game {\n  constructor (options) {\n    this.DIM_X = options.DIM_X;\n    this.DIM_Y = options.DIM_Y;\n    this.ctx = options.ctx;\n    this.entities = [];\n    this.creatures = [];\n    this.moveDirX = 0;\n    this.moveDirY = 0;\n\n  }\n\n  createPlayer () {\n    // center pos in the middle of the canvas object\n    let pos = [this.DIM_X / 2, this.DIM_Y / 2];\n    this.player = new Slime({\n      pos,\n      dim: [20, 20],\n      src: \"assets/sprites/test-slime.png\"\n    });\n\n    // this.entities.push(this.player);\n    this.creatures.push(this.player);\n  }\n\n  generateMap () {\n\n  }\n\n  generateEntities () {\n    // * For testing\n    this.rock = new Entity ({\n      pos: [500, 500],\n      dim: [200, 150],\n      src: 'assets/sprites/rock.jpg'\n    });\n\n    this.entities.push(this.rock);\n  }\n\n  render (ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.entities.forEach(entity => entity.draw(ctx));\n    this.creatures.forEach(creature => creature.draw(ctx));\n  }\n\n  start () {\n    this.setKeyBinds();\n    this.generateEntities();\n    this.createPlayer();\n    // refresh 60 times per second\n    setInterval(() => {\n      this.render(this.ctx);\n      this.moveEntities();\n    }, 16.667)\n  }\n\n  setKeyBinds () {\n    // handle keydownfor arrow keys\n    document.addEventListener('keydown', e => {\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          this.moveDirY = 10;\n          break;\n        case 'ArrowDown':\n          this.moveDirY = -10;\n          break;\n        case 'ArrowLeft':\n          this.moveDirX = 10;\n          break;\n        case 'ArrowRight':\n          this.moveDirX = -10;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // handle keyup for arrow keys\n    document.addEventListener('keyup', e => {\n      e.preventDefault();\n      const horKeys = ['ArrowLeft', 'ArrowRight'];\n      const verKeys = ['ArrowUp', 'ArrowDown']; \n\n      if (horKeys.includes(e.key)) {\n        this.moveDirX = 0;\n      }\n\n      if (verKeys.includes(e.key)) {\n        this.moveDirY = 0;\n      }\n    })\n  }\n\n  moveEntities () {\n    // * testing\n    // check collision with player\n    this.entities.forEach(entity => \n      entity.move(this.moveDirX, this.moveDirY, this.player)\n    );\n    // this.player.move();\n    // this.creatures.forEach(creature => creature.move(this.moveDirX, this.moveDirY));\n  }\n}","import Entity from './entity';\nimport Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('canvas');\n  const DIM_X = 1200;\n  const DIM_Y = 900;\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = DIM_X;\n  canvas.height = DIM_Y;\n  \n  let game = new Game({\n    DIM_X,\n    DIM_Y,\n    ctx\n  });\n  \n  game.start();\n});","import Creature from './creature';\n\nexport default class Slime extends Creature {\n  constructor (options) {\n    super(options);\n  }\n  \n  move() {\n    // Do not move because the player should be in the center of the frame of\n    // reference\n  }\n}"],"sourceRoot":""}